/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   websocket-panel.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

declare namespace ApiElements {

  /**
   * A web socket panel with the request and history of calls.
   *
   * Changes in version 2
   *
   * - Model is not included into the DOM, add `arc-models/websocket-url-history-model.html`
   * component to your application to handle database queries.
   *
   * To styles the component check `websocket-request`, `websocket-data-view`
   * and `websocket-history` components.
   */
  class WebsocketPanel extends PolymerElement {

    /**
     * Remote URL to connect to
     */
    url: string|null|undefined;

    /**
     * List of history data from the datastore.
     */
    history: any[]|null|undefined;

    /**
     * Computed value, true if the element has history data.
     */
    readonly hasHistoryData: boolean|null|undefined;

    /**
     * If true then the element is loading the history data.
     */
    readonly loading: boolean|null|undefined;

    /**
     * True when connecting to a server
     */
    connecting: boolean|null|undefined;

    /**
     * True if the socket is connected.
     */
    connected: boolean|null|undefined;

    /**
     * Computed value, is set then the connections history is rendered
     */
    readonly renderHistory: boolean|null|undefined;

    /**
     * List of communication messages with the server.
     */
    messages: any[]|null|undefined;

    /**
     * When set it won't automatically query history data when connected to DOM.
     */
    noAuto: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Sends `websocket-url-history-list` event to query the history.
     */
    refreshHistory(): Promise<any>|null;

    /**
     * Dispatches websocket-url-history-list event and returns it.
     */
    _dispatchHistoryList(): CustomEvent|null;

    /**
     * Handler for the `websocket-url-history-changed`. Updates the item in
     *  the `history` list if available.
     */
    _storeItemChanged(e: CustomEvent|null): void;

    /**
     * Computes `hasData` property based on the `history` state.
     */
    _computeHasHistoryData(history: Array<object|null>|null|undefined): Boolean|null;
    _historyUrlSelected(e: any): void;
    _computeRenderHistory(connecting: any, connected: any): any;
    _clearMessages(): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "websocket-panel": ApiElements.WebsocketPanel;
  }
}

export {};
